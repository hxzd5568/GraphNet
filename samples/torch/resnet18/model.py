class GraphModule(torch.nn.Module):

    def forward(self, p_conv1_weight, p_bn1_weight, p_bn1_bias, p_getattr_l__self___layer1___0___conv1_weight, p_getattr_l__self___layer1___0___bn1_weight, p_getattr_l__self___layer1___0___bn1_bias, p_getattr_l__self___layer1___0___conv2_weight, p_getattr_l__self___layer1___0___bn2_weight, p_getattr_l__self___layer1___0___bn2_bias, p_getattr_l__self___layer1___1___conv1_weight, p_getattr_l__self___layer1___1___bn1_weight, p_getattr_l__self___layer1___1___bn1_bias, p_getattr_l__self___layer1___1___conv2_weight, p_getattr_l__self___layer1___1___bn2_weight, p_getattr_l__self___layer1___1___bn2_bias, p_getattr_l__self___layer2___0___conv1_weight, p_getattr_l__self___layer2___0___bn1_weight, p_getattr_l__self___layer2___0___bn1_bias, p_getattr_l__self___layer2___0___conv2_weight, p_getattr_l__self___layer2___0___bn2_weight, p_getattr_l__self___layer2___0___bn2_bias, p_getattr_l__self___layer2___0___downsample_0_weight, p_getattr_l__self___layer2___0___downsample_1_weight, p_getattr_l__self___layer2___0___downsample_1_bias, p_getattr_l__self___layer2___1___conv1_weight, p_getattr_l__self___layer2___1___bn1_weight, p_getattr_l__self___layer2___1___bn1_bias, p_getattr_l__self___layer2___1___conv2_weight, p_getattr_l__self___layer2___1___bn2_weight, p_getattr_l__self___layer2___1___bn2_bias, p_getattr_l__self___layer3___0___conv1_weight, p_getattr_l__self___layer3___0___bn1_weight, p_getattr_l__self___layer3___0___bn1_bias, p_getattr_l__self___layer3___0___conv2_weight, p_getattr_l__self___layer3___0___bn2_weight, p_getattr_l__self___layer3___0___bn2_bias, p_getattr_l__self___layer3___0___downsample_0_weight, p_getattr_l__self___layer3___0___downsample_1_weight, p_getattr_l__self___layer3___0___downsample_1_bias, p_getattr_l__self___layer3___1___conv1_weight, p_getattr_l__self___layer3___1___bn1_weight, p_getattr_l__self___layer3___1___bn1_bias, p_getattr_l__self___layer3___1___conv2_weight, p_getattr_l__self___layer3___1___bn2_weight, p_getattr_l__self___layer3___1___bn2_bias, p_getattr_l__self___layer4___0___conv1_weight, p_getattr_l__self___layer4___0___bn1_weight, p_getattr_l__self___layer4___0___bn1_bias, p_getattr_l__self___layer4___0___conv2_weight, p_getattr_l__self___layer4___0___bn2_weight, p_getattr_l__self___layer4___0___bn2_bias, p_getattr_l__self___layer4___0___downsample_0_weight, p_getattr_l__self___layer4___0___downsample_1_weight, p_getattr_l__self___layer4___0___downsample_1_bias, p_getattr_l__self___layer4___1___conv1_weight, p_getattr_l__self___layer4___1___bn1_weight, p_getattr_l__self___layer4___1___bn1_bias, p_getattr_l__self___layer4___1___conv2_weight, p_getattr_l__self___layer4___1___bn2_weight, p_getattr_l__self___layer4___1___bn2_bias, p_fc_weight, p_fc_bias, b_bn1_running_mean, b_bn1_running_var, b_bn1_num_batches_tracked, b_getattr_l__self___layer1___0___bn1_running_mean, b_getattr_l__self___layer1___0___bn1_running_var, b_getattr_l__self___layer1___0___bn1_num_batches_tracked, b_getattr_l__self___layer1___0___bn2_running_mean, b_getattr_l__self___layer1___0___bn2_running_var, b_getattr_l__self___layer1___0___bn2_num_batches_tracked, b_getattr_l__self___layer1___1___bn1_running_mean, b_getattr_l__self___layer1___1___bn1_running_var, b_getattr_l__self___layer1___1___bn1_num_batches_tracked, b_getattr_l__self___layer1___1___bn2_running_mean, b_getattr_l__self___layer1___1___bn2_running_var, b_getattr_l__self___layer1___1___bn2_num_batches_tracked, b_getattr_l__self___layer2___0___bn1_running_mean, b_getattr_l__self___layer2___0___bn1_running_var, b_getattr_l__self___layer2___0___bn1_num_batches_tracked, b_getattr_l__self___layer2___0___bn2_running_mean, b_getattr_l__self___layer2___0___bn2_running_var, b_getattr_l__self___layer2___0___bn2_num_batches_tracked, b_getattr_l__self___layer2___0___downsample_1_running_mean, b_getattr_l__self___layer2___0___downsample_1_running_var, b_getattr_l__self___layer2___0___downsample_1_num_batches_tracked, b_getattr_l__self___layer2___1___bn1_running_mean, b_getattr_l__self___layer2___1___bn1_running_var, b_getattr_l__self___layer2___1___bn1_num_batches_tracked, b_getattr_l__self___layer2___1___bn2_running_mean, b_getattr_l__self___layer2___1___bn2_running_var, b_getattr_l__self___layer2___1___bn2_num_batches_tracked, b_getattr_l__self___layer3___0___bn1_running_mean, b_getattr_l__self___layer3___0___bn1_running_var, b_getattr_l__self___layer3___0___bn1_num_batches_tracked, b_getattr_l__self___layer3___0___bn2_running_mean, b_getattr_l__self___layer3___0___bn2_running_var, b_getattr_l__self___layer3___0___bn2_num_batches_tracked, b_getattr_l__self___layer3___0___downsample_1_running_mean, b_getattr_l__self___layer3___0___downsample_1_running_var, b_getattr_l__self___layer3___0___downsample_1_num_batches_tracked, b_getattr_l__self___layer3___1___bn1_running_mean, b_getattr_l__self___layer3___1___bn1_running_var, b_getattr_l__self___layer3___1___bn1_num_batches_tracked, b_getattr_l__self___layer3___1___bn2_running_mean, b_getattr_l__self___layer3___1___bn2_running_var, b_getattr_l__self___layer3___1___bn2_num_batches_tracked, b_getattr_l__self___layer4___0___bn1_running_mean, b_getattr_l__self___layer4___0___bn1_running_var, b_getattr_l__self___layer4___0___bn1_num_batches_tracked, b_getattr_l__self___layer4___0___bn2_running_mean, b_getattr_l__self___layer4___0___bn2_running_var, b_getattr_l__self___layer4___0___bn2_num_batches_tracked, b_getattr_l__self___layer4___0___downsample_1_running_mean, b_getattr_l__self___layer4___0___downsample_1_running_var, b_getattr_l__self___layer4___0___downsample_1_num_batches_tracked, b_getattr_l__self___layer4___1___bn1_running_mean, b_getattr_l__self___layer4___1___bn1_running_var, b_getattr_l__self___layer4___1___bn1_num_batches_tracked, b_getattr_l__self___layer4___1___bn2_running_mean, b_getattr_l__self___layer4___1___bn2_running_var, b_getattr_l__self___layer4___1___bn2_num_batches_tracked, x):
        conv2d = torch.ops.aten.conv2d.default(x, p_conv1_weight, None, [2, 2], [3, 3]);  x = p_conv1_weight = None
        batch_norm = torch.ops.aten.batch_norm.default(conv2d, p_bn1_weight, p_bn1_bias, b_bn1_running_mean, b_bn1_running_var, False, 0.1, 1e-05, True);  conv2d = p_bn1_weight = p_bn1_bias = b_bn1_running_mean = b_bn1_running_var = None
        relu_ = torch.ops.aten.relu_.default(batch_norm);  batch_norm = None
        max_pool2d = torch.ops.aten.max_pool2d.default(relu_, [3, 3], [2, 2], [1, 1]);  relu_ = None
        conv2d_1 = torch.ops.aten.conv2d.default(max_pool2d, p_getattr_l__self___layer1___0___conv1_weight, None, [1, 1], [1, 1]);  p_getattr_l__self___layer1___0___conv1_weight = None
        batch_norm_1 = torch.ops.aten.batch_norm.default(conv2d_1, p_getattr_l__self___layer1___0___bn1_weight, p_getattr_l__self___layer1___0___bn1_bias, b_getattr_l__self___layer1___0___bn1_running_mean, b_getattr_l__self___layer1___0___bn1_running_var, False, 0.1, 1e-05, True);  conv2d_1 = p_getattr_l__self___layer1___0___bn1_weight = p_getattr_l__self___layer1___0___bn1_bias = b_getattr_l__self___layer1___0___bn1_running_mean = b_getattr_l__self___layer1___0___bn1_running_var = None
        relu__1 = torch.ops.aten.relu_.default(batch_norm_1);  batch_norm_1 = None
        conv2d_2 = torch.ops.aten.conv2d.default(relu__1, p_getattr_l__self___layer1___0___conv2_weight, None, [1, 1], [1, 1]);  relu__1 = p_getattr_l__self___layer1___0___conv2_weight = None
        batch_norm_2 = torch.ops.aten.batch_norm.default(conv2d_2, p_getattr_l__self___layer1___0___bn2_weight, p_getattr_l__self___layer1___0___bn2_bias, b_getattr_l__self___layer1___0___bn2_running_mean, b_getattr_l__self___layer1___0___bn2_running_var, False, 0.1, 1e-05, True);  conv2d_2 = p_getattr_l__self___layer1___0___bn2_weight = p_getattr_l__self___layer1___0___bn2_bias = b_getattr_l__self___layer1___0___bn2_running_mean = b_getattr_l__self___layer1___0___bn2_running_var = None
        add_ = torch.ops.aten.add_.Tensor(batch_norm_2, max_pool2d);  batch_norm_2 = max_pool2d = None
        relu__2 = torch.ops.aten.relu_.default(add_);  add_ = None
        conv2d_3 = torch.ops.aten.conv2d.default(relu__2, p_getattr_l__self___layer1___1___conv1_weight, None, [1, 1], [1, 1]);  p_getattr_l__self___layer1___1___conv1_weight = None
        batch_norm_3 = torch.ops.aten.batch_norm.default(conv2d_3, p_getattr_l__self___layer1___1___bn1_weight, p_getattr_l__self___layer1___1___bn1_bias, b_getattr_l__self___layer1___1___bn1_running_mean, b_getattr_l__self___layer1___1___bn1_running_var, False, 0.1, 1e-05, True);  conv2d_3 = p_getattr_l__self___layer1___1___bn1_weight = p_getattr_l__self___layer1___1___bn1_bias = b_getattr_l__self___layer1___1___bn1_running_mean = b_getattr_l__self___layer1___1___bn1_running_var = None
        relu__3 = torch.ops.aten.relu_.default(batch_norm_3);  batch_norm_3 = None
        conv2d_4 = torch.ops.aten.conv2d.default(relu__3, p_getattr_l__self___layer1___1___conv2_weight, None, [1, 1], [1, 1]);  relu__3 = p_getattr_l__self___layer1___1___conv2_weight = None
        batch_norm_4 = torch.ops.aten.batch_norm.default(conv2d_4, p_getattr_l__self___layer1___1___bn2_weight, p_getattr_l__self___layer1___1___bn2_bias, b_getattr_l__self___layer1___1___bn2_running_mean, b_getattr_l__self___layer1___1___bn2_running_var, False, 0.1, 1e-05, True);  conv2d_4 = p_getattr_l__self___layer1___1___bn2_weight = p_getattr_l__self___layer1___1___bn2_bias = b_getattr_l__self___layer1___1___bn2_running_mean = b_getattr_l__self___layer1___1___bn2_running_var = None
        add__1 = torch.ops.aten.add_.Tensor(batch_norm_4, relu__2);  batch_norm_4 = relu__2 = None
        relu__4 = torch.ops.aten.relu_.default(add__1);  add__1 = None
        conv2d_5 = torch.ops.aten.conv2d.default(relu__4, p_getattr_l__self___layer2___0___conv1_weight, None, [2, 2], [1, 1]);  p_getattr_l__self___layer2___0___conv1_weight = None
        batch_norm_5 = torch.ops.aten.batch_norm.default(conv2d_5, p_getattr_l__self___layer2___0___bn1_weight, p_getattr_l__self___layer2___0___bn1_bias, b_getattr_l__self___layer2___0___bn1_running_mean, b_getattr_l__self___layer2___0___bn1_running_var, False, 0.1, 1e-05, True);  conv2d_5 = p_getattr_l__self___layer2___0___bn1_weight = p_getattr_l__self___layer2___0___bn1_bias = b_getattr_l__self___layer2___0___bn1_running_mean = b_getattr_l__self___layer2___0___bn1_running_var = None
        relu__5 = torch.ops.aten.relu_.default(batch_norm_5);  batch_norm_5 = None
        conv2d_6 = torch.ops.aten.conv2d.default(relu__5, p_getattr_l__self___layer2___0___conv2_weight, None, [1, 1], [1, 1]);  relu__5 = p_getattr_l__self___layer2___0___conv2_weight = None
        batch_norm_6 = torch.ops.aten.batch_norm.default(conv2d_6, p_getattr_l__self___layer2___0___bn2_weight, p_getattr_l__self___layer2___0___bn2_bias, b_getattr_l__self___layer2___0___bn2_running_mean, b_getattr_l__self___layer2___0___bn2_running_var, False, 0.1, 1e-05, True);  conv2d_6 = p_getattr_l__self___layer2___0___bn2_weight = p_getattr_l__self___layer2___0___bn2_bias = b_getattr_l__self___layer2___0___bn2_running_mean = b_getattr_l__self___layer2___0___bn2_running_var = None
        conv2d_7 = torch.ops.aten.conv2d.default(relu__4, p_getattr_l__self___layer2___0___downsample_0_weight, None, [2, 2]);  relu__4 = p_getattr_l__self___layer2___0___downsample_0_weight = None
        batch_norm_7 = torch.ops.aten.batch_norm.default(conv2d_7, p_getattr_l__self___layer2___0___downsample_1_weight, p_getattr_l__self___layer2___0___downsample_1_bias, b_getattr_l__self___layer2___0___downsample_1_running_mean, b_getattr_l__self___layer2___0___downsample_1_running_var, False, 0.1, 1e-05, True);  conv2d_7 = p_getattr_l__self___layer2___0___downsample_1_weight = p_getattr_l__self___layer2___0___downsample_1_bias = b_getattr_l__self___layer2___0___downsample_1_running_mean = b_getattr_l__self___layer2___0___downsample_1_running_var = None
        add__2 = torch.ops.aten.add_.Tensor(batch_norm_6, batch_norm_7);  batch_norm_6 = batch_norm_7 = None
        relu__6 = torch.ops.aten.relu_.default(add__2);  add__2 = None
        conv2d_8 = torch.ops.aten.conv2d.default(relu__6, p_getattr_l__self___layer2___1___conv1_weight, None, [1, 1], [1, 1]);  p_getattr_l__self___layer2___1___conv1_weight = None
        batch_norm_8 = torch.ops.aten.batch_norm.default(conv2d_8, p_getattr_l__self___layer2___1___bn1_weight, p_getattr_l__self___layer2___1___bn1_bias, b_getattr_l__self___layer2___1___bn1_running_mean, b_getattr_l__self___layer2___1___bn1_running_var, False, 0.1, 1e-05, True);  conv2d_8 = p_getattr_l__self___layer2___1___bn1_weight = p_getattr_l__self___layer2___1___bn1_bias = b_getattr_l__self___layer2___1___bn1_running_mean = b_getattr_l__self___layer2___1___bn1_running_var = None
        relu__7 = torch.ops.aten.relu_.default(batch_norm_8);  batch_norm_8 = None
        conv2d_9 = torch.ops.aten.conv2d.default(relu__7, p_getattr_l__self___layer2___1___conv2_weight, None, [1, 1], [1, 1]);  relu__7 = p_getattr_l__self___layer2___1___conv2_weight = None
        batch_norm_9 = torch.ops.aten.batch_norm.default(conv2d_9, p_getattr_l__self___layer2___1___bn2_weight, p_getattr_l__self___layer2___1___bn2_bias, b_getattr_l__self___layer2___1___bn2_running_mean, b_getattr_l__self___layer2___1___bn2_running_var, False, 0.1, 1e-05, True);  conv2d_9 = p_getattr_l__self___layer2___1___bn2_weight = p_getattr_l__self___layer2___1___bn2_bias = b_getattr_l__self___layer2___1___bn2_running_mean = b_getattr_l__self___layer2___1___bn2_running_var = None
        add__3 = torch.ops.aten.add_.Tensor(batch_norm_9, relu__6);  batch_norm_9 = relu__6 = None
        relu__8 = torch.ops.aten.relu_.default(add__3);  add__3 = None
        conv2d_10 = torch.ops.aten.conv2d.default(relu__8, p_getattr_l__self___layer3___0___conv1_weight, None, [2, 2], [1, 1]);  p_getattr_l__self___layer3___0___conv1_weight = None
        batch_norm_10 = torch.ops.aten.batch_norm.default(conv2d_10, p_getattr_l__self___layer3___0___bn1_weight, p_getattr_l__self___layer3___0___bn1_bias, b_getattr_l__self___layer3___0___bn1_running_mean, b_getattr_l__self___layer3___0___bn1_running_var, False, 0.1, 1e-05, True);  conv2d_10 = p_getattr_l__self___layer3___0___bn1_weight = p_getattr_l__self___layer3___0___bn1_bias = b_getattr_l__self___layer3___0___bn1_running_mean = b_getattr_l__self___layer3___0___bn1_running_var = None
        relu__9 = torch.ops.aten.relu_.default(batch_norm_10);  batch_norm_10 = None
        conv2d_11 = torch.ops.aten.conv2d.default(relu__9, p_getattr_l__self___layer3___0___conv2_weight, None, [1, 1], [1, 1]);  relu__9 = p_getattr_l__self___layer3___0___conv2_weight = None
        batch_norm_11 = torch.ops.aten.batch_norm.default(conv2d_11, p_getattr_l__self___layer3___0___bn2_weight, p_getattr_l__self___layer3___0___bn2_bias, b_getattr_l__self___layer3___0___bn2_running_mean, b_getattr_l__self___layer3___0___bn2_running_var, False, 0.1, 1e-05, True);  conv2d_11 = p_getattr_l__self___layer3___0___bn2_weight = p_getattr_l__self___layer3___0___bn2_bias = b_getattr_l__self___layer3___0___bn2_running_mean = b_getattr_l__self___layer3___0___bn2_running_var = None
        conv2d_12 = torch.ops.aten.conv2d.default(relu__8, p_getattr_l__self___layer3___0___downsample_0_weight, None, [2, 2]);  relu__8 = p_getattr_l__self___layer3___0___downsample_0_weight = None
        batch_norm_12 = torch.ops.aten.batch_norm.default(conv2d_12, p_getattr_l__self___layer3___0___downsample_1_weight, p_getattr_l__self___layer3___0___downsample_1_bias, b_getattr_l__self___layer3___0___downsample_1_running_mean, b_getattr_l__self___layer3___0___downsample_1_running_var, False, 0.1, 1e-05, True);  conv2d_12 = p_getattr_l__self___layer3___0___downsample_1_weight = p_getattr_l__self___layer3___0___downsample_1_bias = b_getattr_l__self___layer3___0___downsample_1_running_mean = b_getattr_l__self___layer3___0___downsample_1_running_var = None
        add__4 = torch.ops.aten.add_.Tensor(batch_norm_11, batch_norm_12);  batch_norm_11 = batch_norm_12 = None
        relu__10 = torch.ops.aten.relu_.default(add__4);  add__4 = None
        conv2d_13 = torch.ops.aten.conv2d.default(relu__10, p_getattr_l__self___layer3___1___conv1_weight, None, [1, 1], [1, 1]);  p_getattr_l__self___layer3___1___conv1_weight = None
        batch_norm_13 = torch.ops.aten.batch_norm.default(conv2d_13, p_getattr_l__self___layer3___1___bn1_weight, p_getattr_l__self___layer3___1___bn1_bias, b_getattr_l__self___layer3___1___bn1_running_mean, b_getattr_l__self___layer3___1___bn1_running_var, False, 0.1, 1e-05, True);  conv2d_13 = p_getattr_l__self___layer3___1___bn1_weight = p_getattr_l__self___layer3___1___bn1_bias = b_getattr_l__self___layer3___1___bn1_running_mean = b_getattr_l__self___layer3___1___bn1_running_var = None
        relu__11 = torch.ops.aten.relu_.default(batch_norm_13);  batch_norm_13 = None
        conv2d_14 = torch.ops.aten.conv2d.default(relu__11, p_getattr_l__self___layer3___1___conv2_weight, None, [1, 1], [1, 1]);  relu__11 = p_getattr_l__self___layer3___1___conv2_weight = None
        batch_norm_14 = torch.ops.aten.batch_norm.default(conv2d_14, p_getattr_l__self___layer3___1___bn2_weight, p_getattr_l__self___layer3___1___bn2_bias, b_getattr_l__self___layer3___1___bn2_running_mean, b_getattr_l__self___layer3___1___bn2_running_var, False, 0.1, 1e-05, True);  conv2d_14 = p_getattr_l__self___layer3___1___bn2_weight = p_getattr_l__self___layer3___1___bn2_bias = b_getattr_l__self___layer3___1___bn2_running_mean = b_getattr_l__self___layer3___1___bn2_running_var = None
        add__5 = torch.ops.aten.add_.Tensor(batch_norm_14, relu__10);  batch_norm_14 = relu__10 = None
        relu__12 = torch.ops.aten.relu_.default(add__5);  add__5 = None
        conv2d_15 = torch.ops.aten.conv2d.default(relu__12, p_getattr_l__self___layer4___0___conv1_weight, None, [2, 2], [1, 1]);  p_getattr_l__self___layer4___0___conv1_weight = None
        batch_norm_15 = torch.ops.aten.batch_norm.default(conv2d_15, p_getattr_l__self___layer4___0___bn1_weight, p_getattr_l__self___layer4___0___bn1_bias, b_getattr_l__self___layer4___0___bn1_running_mean, b_getattr_l__self___layer4___0___bn1_running_var, False, 0.1, 1e-05, True);  conv2d_15 = p_getattr_l__self___layer4___0___bn1_weight = p_getattr_l__self___layer4___0___bn1_bias = b_getattr_l__self___layer4___0___bn1_running_mean = b_getattr_l__self___layer4___0___bn1_running_var = None
        relu__13 = torch.ops.aten.relu_.default(batch_norm_15);  batch_norm_15 = None
        conv2d_16 = torch.ops.aten.conv2d.default(relu__13, p_getattr_l__self___layer4___0___conv2_weight, None, [1, 1], [1, 1]);  relu__13 = p_getattr_l__self___layer4___0___conv2_weight = None
        batch_norm_16 = torch.ops.aten.batch_norm.default(conv2d_16, p_getattr_l__self___layer4___0___bn2_weight, p_getattr_l__self___layer4___0___bn2_bias, b_getattr_l__self___layer4___0___bn2_running_mean, b_getattr_l__self___layer4___0___bn2_running_var, False, 0.1, 1e-05, True);  conv2d_16 = p_getattr_l__self___layer4___0___bn2_weight = p_getattr_l__self___layer4___0___bn2_bias = b_getattr_l__self___layer4___0___bn2_running_mean = b_getattr_l__self___layer4___0___bn2_running_var = None
        conv2d_17 = torch.ops.aten.conv2d.default(relu__12, p_getattr_l__self___layer4___0___downsample_0_weight, None, [2, 2]);  relu__12 = p_getattr_l__self___layer4___0___downsample_0_weight = None
        batch_norm_17 = torch.ops.aten.batch_norm.default(conv2d_17, p_getattr_l__self___layer4___0___downsample_1_weight, p_getattr_l__self___layer4___0___downsample_1_bias, b_getattr_l__self___layer4___0___downsample_1_running_mean, b_getattr_l__self___layer4___0___downsample_1_running_var, False, 0.1, 1e-05, True);  conv2d_17 = p_getattr_l__self___layer4___0___downsample_1_weight = p_getattr_l__self___layer4___0___downsample_1_bias = b_getattr_l__self___layer4___0___downsample_1_running_mean = b_getattr_l__self___layer4___0___downsample_1_running_var = None
        add__6 = torch.ops.aten.add_.Tensor(batch_norm_16, batch_norm_17);  batch_norm_16 = batch_norm_17 = None
        relu__14 = torch.ops.aten.relu_.default(add__6);  add__6 = None
        conv2d_18 = torch.ops.aten.conv2d.default(relu__14, p_getattr_l__self___layer4___1___conv1_weight, None, [1, 1], [1, 1]);  p_getattr_l__self___layer4___1___conv1_weight = None
        batch_norm_18 = torch.ops.aten.batch_norm.default(conv2d_18, p_getattr_l__self___layer4___1___bn1_weight, p_getattr_l__self___layer4___1___bn1_bias, b_getattr_l__self___layer4___1___bn1_running_mean, b_getattr_l__self___layer4___1___bn1_running_var, False, 0.1, 1e-05, True);  conv2d_18 = p_getattr_l__self___layer4___1___bn1_weight = p_getattr_l__self___layer4___1___bn1_bias = b_getattr_l__self___layer4___1___bn1_running_mean = b_getattr_l__self___layer4___1___bn1_running_var = None
        relu__15 = torch.ops.aten.relu_.default(batch_norm_18);  batch_norm_18 = None
        conv2d_19 = torch.ops.aten.conv2d.default(relu__15, p_getattr_l__self___layer4___1___conv2_weight, None, [1, 1], [1, 1]);  relu__15 = p_getattr_l__self___layer4___1___conv2_weight = None
        batch_norm_19 = torch.ops.aten.batch_norm.default(conv2d_19, p_getattr_l__self___layer4___1___bn2_weight, p_getattr_l__self___layer4___1___bn2_bias, b_getattr_l__self___layer4___1___bn2_running_mean, b_getattr_l__self___layer4___1___bn2_running_var, False, 0.1, 1e-05, True);  conv2d_19 = p_getattr_l__self___layer4___1___bn2_weight = p_getattr_l__self___layer4___1___bn2_bias = b_getattr_l__self___layer4___1___bn2_running_mean = b_getattr_l__self___layer4___1___bn2_running_var = None
        add__7 = torch.ops.aten.add_.Tensor(batch_norm_19, relu__14);  batch_norm_19 = relu__14 = None
        relu__16 = torch.ops.aten.relu_.default(add__7);  add__7 = None
        adaptive_avg_pool2d = torch.ops.aten.adaptive_avg_pool2d.default(relu__16, [1, 1]);  relu__16 = None
        flatten = torch.ops.aten.flatten.using_ints(adaptive_avg_pool2d, 1);  adaptive_avg_pool2d = None
        linear = torch.ops.aten.linear.default(flatten, p_fc_weight, p_fc_bias);  flatten = p_fc_weight = p_fc_bias = None
        return (linear,)
        
    # To see more debug info, please use `graph_module.print_readable()`


